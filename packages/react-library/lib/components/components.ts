'use client';

/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */

import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent } from '@stencil/react-output-target/runtime';
import React from 'react';
import { UiButton as UiButtonElement, defineCustomElement as defineUiButton } from "stencil-ui-core-library/dist/components/ui-button.js";
import { UiFieldsetOption as UiFieldsetOptionElement, defineCustomElement as defineUiFieldsetOption } from "stencil-ui-core-library/dist/components/ui-fieldset-option.js";
import { UiFieldset as UiFieldsetElement, defineCustomElement as defineUiFieldset } from "stencil-ui-core-library/dist/components/ui-fieldset.js";
import { UiIcon as UiIconElement, defineCustomElement as defineUiIcon } from "stencil-ui-core-library/dist/components/ui-icon.js";
import { UiInput as UiInputElement, defineCustomElement as defineUiInput } from "stencil-ui-core-library/dist/components/ui-input.js";
import { UiLabel as UiLabelElement, defineCustomElement as defineUiLabel } from "stencil-ui-core-library/dist/components/ui-label.js";
import { UiLogo as UiLogoElement, defineCustomElement as defineUiLogo } from "stencil-ui-core-library/dist/components/ui-logo.js";
import { UiMenu as UiMenuElement, defineCustomElement as defineUiMenu } from "stencil-ui-core-library/dist/components/ui-menu.js";
import { UiModal as UiModalElement, defineCustomElement as defineUiModal } from "stencil-ui-core-library/dist/components/ui-modal.js";
import { UiSelect as UiSelectElement, defineCustomElement as defineUiSelect } from "stencil-ui-core-library/dist/components/ui-select.js";
import { UiSidebar as UiSidebarElement, defineCustomElement as defineUiSidebar } from "stencil-ui-core-library/dist/components/ui-sidebar.js";
import { UiTabContext as UiTabContextElement, defineCustomElement as defineUiTabContext } from "stencil-ui-core-library/dist/components/ui-tab-context.js";
import { UiTabList as UiTabListElement, defineCustomElement as defineUiTabList } from "stencil-ui-core-library/dist/components/ui-tab-list.js";
import { UiTabPanel as UiTabPanelElement, defineCustomElement as defineUiTabPanel } from "stencil-ui-core-library/dist/components/ui-tab-panel.js";
import { UiTab as UiTabElement, defineCustomElement as defineUiTab } from "stencil-ui-core-library/dist/components/ui-tab.js";
import { UiTable as UiTableElement, defineCustomElement as defineUiTable } from "stencil-ui-core-library/dist/components/ui-table.js";
import { UiTextarea as UiTextareaElement, defineCustomElement as defineUiTextarea } from "stencil-ui-core-library/dist/components/ui-textarea.js";
import { UiTooltip as UiTooltipElement, defineCustomElement as defineUiTooltip } from "stencil-ui-core-library/dist/components/ui-tooltip.js";
import { UiTypography as UiTypographyElement, defineCustomElement as defineUiTypography } from "stencil-ui-core-library/dist/components/ui-typography.js";
import { UiXstack as UiXstackElement, defineCustomElement as defineUiXstack } from "stencil-ui-core-library/dist/components/ui-xstack.js";
import { UiYstack as UiYstackElement, defineCustomElement as defineUiYstack } from "stencil-ui-core-library/dist/components/ui-ystack.js";

export type UiButtonEvents = NonNullable<unknown>;

export const UiButton: StencilReactComponent<UiButtonElement, UiButtonEvents> = /*@__PURE__*/ createComponent<UiButtonElement, UiButtonEvents>({
    tagName: 'ui-button',
    elementClass: UiButtonElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as UiButtonEvents,
    defineCustomElement: defineUiButton
});

export type UiFieldsetEvents = NonNullable<unknown>;

export const UiFieldset: StencilReactComponent<UiFieldsetElement, UiFieldsetEvents> = /*@__PURE__*/ createComponent<UiFieldsetElement, UiFieldsetEvents>({
    tagName: 'ui-fieldset',
    elementClass: UiFieldsetElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as UiFieldsetEvents,
    defineCustomElement: defineUiFieldset
});

export type UiFieldsetOptionEvents = NonNullable<unknown>;

export const UiFieldsetOption: StencilReactComponent<UiFieldsetOptionElement, UiFieldsetOptionEvents> = /*@__PURE__*/ createComponent<UiFieldsetOptionElement, UiFieldsetOptionEvents>({
    tagName: 'ui-fieldset-option',
    elementClass: UiFieldsetOptionElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as UiFieldsetOptionEvents,
    defineCustomElement: defineUiFieldsetOption
});

export type UiIconEvents = NonNullable<unknown>;

export const UiIcon: StencilReactComponent<UiIconElement, UiIconEvents> = /*@__PURE__*/ createComponent<UiIconElement, UiIconEvents>({
    tagName: 'ui-icon',
    elementClass: UiIconElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as UiIconEvents,
    defineCustomElement: defineUiIcon
});

export type UiInputEvents = NonNullable<unknown>;

export const UiInput: StencilReactComponent<UiInputElement, UiInputEvents> = /*@__PURE__*/ createComponent<UiInputElement, UiInputEvents>({
    tagName: 'ui-input',
    elementClass: UiInputElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as UiInputEvents,
    defineCustomElement: defineUiInput
});

export type UiLabelEvents = NonNullable<unknown>;

export const UiLabel: StencilReactComponent<UiLabelElement, UiLabelEvents> = /*@__PURE__*/ createComponent<UiLabelElement, UiLabelEvents>({
    tagName: 'ui-label',
    elementClass: UiLabelElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as UiLabelEvents,
    defineCustomElement: defineUiLabel
});

export type UiLogoEvents = NonNullable<unknown>;

export const UiLogo: StencilReactComponent<UiLogoElement, UiLogoEvents> = /*@__PURE__*/ createComponent<UiLogoElement, UiLogoEvents>({
    tagName: 'ui-logo',
    elementClass: UiLogoElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as UiLogoEvents,
    defineCustomElement: defineUiLogo
});

export type UiMenuEvents = { onClose: EventName<CustomEvent<void>> };

export const UiMenu: StencilReactComponent<UiMenuElement, UiMenuEvents> = /*@__PURE__*/ createComponent<UiMenuElement, UiMenuEvents>({
    tagName: 'ui-menu',
    elementClass: UiMenuElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: { onClose: 'close' } as UiMenuEvents,
    defineCustomElement: defineUiMenu
});

export type UiModalEvents = { onClose: EventName<CustomEvent<void>> };

export const UiModal: StencilReactComponent<UiModalElement, UiModalEvents> = /*@__PURE__*/ createComponent<UiModalElement, UiModalEvents>({
    tagName: 'ui-modal',
    elementClass: UiModalElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: { onClose: 'close' } as UiModalEvents,
    defineCustomElement: defineUiModal
});

export type UiSelectEvents = NonNullable<unknown>;

export const UiSelect: StencilReactComponent<UiSelectElement, UiSelectEvents> = /*@__PURE__*/ createComponent<UiSelectElement, UiSelectEvents>({
    tagName: 'ui-select',
    elementClass: UiSelectElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as UiSelectEvents,
    defineCustomElement: defineUiSelect
});

export type UiSidebarEvents = NonNullable<unknown>;

export const UiSidebar: StencilReactComponent<UiSidebarElement, UiSidebarEvents> = /*@__PURE__*/ createComponent<UiSidebarElement, UiSidebarEvents>({
    tagName: 'ui-sidebar',
    elementClass: UiSidebarElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as UiSidebarEvents,
    defineCustomElement: defineUiSidebar
});

export type UiTabEvents = { onTabChange: EventName<CustomEvent<{ value: string }>> };

export const UiTab: StencilReactComponent<UiTabElement, UiTabEvents> = /*@__PURE__*/ createComponent<UiTabElement, UiTabEvents>({
    tagName: 'ui-tab',
    elementClass: UiTabElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: { onTabChange: 'tabChange' } as UiTabEvents,
    defineCustomElement: defineUiTab
});

export type UiTabContextEvents = { onTabChange: EventName<CustomEvent<{ value: string }>> };

export const UiTabContext: StencilReactComponent<UiTabContextElement, UiTabContextEvents> = /*@__PURE__*/ createComponent<UiTabContextElement, UiTabContextEvents>({
    tagName: 'ui-tab-context',
    elementClass: UiTabContextElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: { onTabChange: 'tabChange' } as UiTabContextEvents,
    defineCustomElement: defineUiTabContext
});

export type UiTabListEvents = NonNullable<unknown>;

export const UiTabList: StencilReactComponent<UiTabListElement, UiTabListEvents> = /*@__PURE__*/ createComponent<UiTabListElement, UiTabListEvents>({
    tagName: 'ui-tab-list',
    elementClass: UiTabListElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as UiTabListEvents,
    defineCustomElement: defineUiTabList
});

export type UiTabPanelEvents = NonNullable<unknown>;

export const UiTabPanel: StencilReactComponent<UiTabPanelElement, UiTabPanelEvents> = /*@__PURE__*/ createComponent<UiTabPanelElement, UiTabPanelEvents>({
    tagName: 'ui-tab-panel',
    elementClass: UiTabPanelElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as UiTabPanelEvents,
    defineCustomElement: defineUiTabPanel
});

export type UiTableEvents = NonNullable<unknown>;

export const UiTable: StencilReactComponent<UiTableElement, UiTableEvents> = /*@__PURE__*/ createComponent<UiTableElement, UiTableEvents>({
    tagName: 'ui-table',
    elementClass: UiTableElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as UiTableEvents,
    defineCustomElement: defineUiTable
});

export type UiTextareaEvents = NonNullable<unknown>;

export const UiTextarea: StencilReactComponent<UiTextareaElement, UiTextareaEvents> = /*@__PURE__*/ createComponent<UiTextareaElement, UiTextareaEvents>({
    tagName: 'ui-textarea',
    elementClass: UiTextareaElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as UiTextareaEvents,
    defineCustomElement: defineUiTextarea
});

export type UiTooltipEvents = NonNullable<unknown>;

export const UiTooltip: StencilReactComponent<UiTooltipElement, UiTooltipEvents> = /*@__PURE__*/ createComponent<UiTooltipElement, UiTooltipEvents>({
    tagName: 'ui-tooltip',
    elementClass: UiTooltipElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as UiTooltipEvents,
    defineCustomElement: defineUiTooltip
});

export type UiTypographyEvents = NonNullable<unknown>;

export const UiTypography: StencilReactComponent<UiTypographyElement, UiTypographyEvents> = /*@__PURE__*/ createComponent<UiTypographyElement, UiTypographyEvents>({
    tagName: 'ui-typography',
    elementClass: UiTypographyElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as UiTypographyEvents,
    defineCustomElement: defineUiTypography
});

export type UiXstackEvents = NonNullable<unknown>;

export const UiXstack: StencilReactComponent<UiXstackElement, UiXstackEvents> = /*@__PURE__*/ createComponent<UiXstackElement, UiXstackEvents>({
    tagName: 'ui-xstack',
    elementClass: UiXstackElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as UiXstackEvents,
    defineCustomElement: defineUiXstack
});

export type UiYstackEvents = NonNullable<unknown>;

export const UiYstack: StencilReactComponent<UiYstackElement, UiYstackEvents> = /*@__PURE__*/ createComponent<UiYstackElement, UiYstackEvents>({
    tagName: 'ui-ystack',
    elementClass: UiYstackElement,
    // @ts-ignore - ignore potential React type mismatches between the Stencil Output Target and your project.
    react: React,
    events: {} as UiYstackEvents,
    defineCustomElement: defineUiYstack
});
